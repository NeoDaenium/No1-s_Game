<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>Difficulty_sldr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xx = 0;
grab = false;
can_click = true;

rightLimit = x+(sprite_get_width(DifficultyBar)/2)+75;
leftLimit = x-(sprite_get_width(DifficultyBar)/2)+290;

/*can_click = true;

rightLimit = x+(sprite_get_width(SoundBar)/2)-30;
leftLimit = x-(sprite_get_width(SoundBar)/2)+30;

//create the slider for this bar and assign it some values
a = instance_create(x, y, SoundSldr_obj);
a.image_xscale = 1;
a.image_yscale = 1;
a.barLength = sprite_get_width(Sound_sldr);
a.rightLimit = rightLimit;
a.leftLimit = leftLimit;
a.percentage = 100;

//its current x value using the above percentage value
a.x = a.leftLimit + ((a.percentage/100) * (a.rightLimit-a.leftLimit));
a.clicked = false;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if the mouse btn is not clicked
if(!mouse_check_button(mb_left))
{
    grab = false; //slider isn't clicked therefore not grabbed
    clicked = false;
}

if ((grab == false) &amp;&amp; (clicked == false)) //if this object isn't being grabbed
{
    exit;
}

else //otherwise change its coordinates
{
    //if we slide within the constraints, update the sliders coordinate
    if((mouse_x + xx) &gt; leftLimit) &amp;&amp; ((mouse_x + xx) &lt; (rightLimit))
    {
        x = mouse_x + xx;
    }
    
    else if((mouse_x + xx) &lt; leftLimit) //set at left limit if user wants to slide
    {
        x = leftLimit;
    }
    
    else if((mouse_x + xx) &gt; rightLimit) //set at right limit if user wants to slide
    {
        x = rightLimit;
    }
}

//work out the percentage value
//percentage = round(((x-leftLimit)/(rightLimit-leftLimit))*100);



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//grab = false; 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if(can_click)
{
    grab = true;
    
    xx = x-mouse_x;
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw sprite
draw_sprite_ext(Difficulty_sldr, 0, x, y, 1, 1, 0, c_white, 1);

//and values
//draw_set_color(c_black);
//draw_set_font(fnt_Game);
//draw_set_halign(fa_center);
//draw_set_valign(fa_middle);

//draw_text(1165, y, string(percentage));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,34</point>
    <point>34,34</point>
  </PhysicsShapePoints>
</object>
