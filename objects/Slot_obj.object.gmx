<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>InvenSlot</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9991</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>items_done = 0;
equip_done = 0;

globalvar ItemX;
ItemX=0;
globalvar ItemY;
ItemY=0;

globalvar EquipItemX;
EquipItemX=0;
globalvar EquipItemY;
EquipItemY=0;

globalvar KeyItemX;
KeyItemX=0;
globalvar KeyItemY;
KeyItemY=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>DestroyInvenInstances</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///inven items
if(items_done==0)
{

var next_y,next_y2;
next_y=0;
next_y2=0;

var next_x;
next_x=0;

var slot_y;
slot_y = view_yview[0] + 60;

for(i=1; i&lt;global.MaxItems; i+=1)
{

if(i == 7 || i == 13)
{
next_x=0;
next_y+=60;
next_y2+=20;
slot_y = (view_yview[0] + 60) + (next_y + next_y2);
instance_create((view_xview[0] + 60)+next_x,slot_y,global.items[i]);
global.ItemX[i] = view_xview[0] + 60+next_x;
global.ItemY[i] = slot_y;
}

else
{
instance_create((view_xview[0] + 60)+next_x,slot_y,global.items[i]);
global.ItemX[i] = view_xview[0] + 60+next_x;
global.ItemY[i] = slot_y;
}

next_x+=60;

}
items_done=1;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///inven slots
var next_y,next_y2;
next_y=0;
next_y2=0;

var next_x;
next_x=0;

var slot_y;
slot_y = view_yview[0] + 60;

for(i=1; i&lt;global.MaxItems; i+=1)
{

if(i == 7 || i == 13)
{
next_x=0;
next_y+=60;
next_y2+=20;
slot_y = (view_yview[0]) + 60 + (next_y + next_y2);
draw_sprite(InvenSlot,0,(view_xview[0] + 60)+next_x,slot_y);
}

else
draw_sprite(InvenSlot,0,(view_xview[0] + 60)+next_x,slot_y);

next_x+=60;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///equip items
if(equip_done==0)
{

var next_y;
next_y=0;

var next_x;
next_x=480;

var slot_y;
slot_y = (view_yview[0] + 60)-30;

for(i=1; i&lt;global.EquipItem; i+=1)
{

if(i == 4)
{
next_x=480;
next_y+=60;
slot_y = slot_y + next_y;
instance_create((view_xview[0] + 60)+next_x,slot_y,global.equip[i]);
global.EquipItemX[i] = view_xview[0] + 60+next_x;
global.EquipItemY[i] = slot_y;
}

else
{
instance_create((view_xview[0] + 60)+next_x,slot_y,global.equip[i]);
global.EquipItemX[i] = view_xview[0] + 60+next_x;
global.EquipItemY[i] = slot_y;
}

next_x+=60;
}
equip_done=1;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///equip slots

var next_y;
next_y=0;

var next_x;
next_x=480;

var slot_y;
slot_y = (view_yview[0] + 60)-30;

for(i=1; i&lt;global.EquipItem; i+=1)
{

if(i == 4)
{
next_x=480;
next_y+=60;
slot_y = slot_y + next_y;
draw_sprite(InvenSlot,0,(view_xview[0] + 60)+next_x,slot_y);
}

else
draw_sprite(InvenSlot,0,(view_xview[0] + 60)+next_x,slot_y);

next_x+=60;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///special items
var next_y;
next_y=0;

var next_x;
next_x=480;

var slot_y;
slot_y = view_yview[0] + 180;

for(i=1; i&lt;global.KeyItems; i+=1)
{

if(i == 4)
{
next_x=480;
next_y+=60;
slot_y = slot_y + next_y;
instance_create((view_xview[0] + 60)+next_x,slot_y,global.KeyItem[i]);
global.KeyItemX[i] = view_xview[0] + 60+next_x;
global.KeyItemY[i] = slot_y;
}

else
{
instance_create((view_xview[0] + 60)+next_x,slot_y,global.KeyItem[i]);
global.KeyItemX[i] = view_xview[0] + 60+next_x;
global.KeyItemY[i] = slot_y;
}

next_x+=60;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///specials slots

var next_y;
next_y=0;

var next_x;
next_x=480;

var slot_y;
slot_y = view_yview[0] + 180;

for(i=1; i&lt;global.KeyItems; i+=1)
{

if(i == 4)
{
next_x=480;
next_y+=60;
slot_y = slot_y + next_y;
draw_sprite(InvenSlot,0,(view_xview[0] + 60)+next_x,slot_y);
}

else
draw_sprite(InvenSlot,0,(view_xview[0] + 60)+next_x,slot_y);

next_x+=60;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>20,20</point>
  </PhysicsShapePoints>
</object>
