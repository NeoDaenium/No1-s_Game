<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>Ben_Idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed=0.2;
image_alpha=2;

hp=100;

alarm[0] = 1; //update currentNode alarm
currentNode = noone;
gotoNode = noone;
moveSpeed = 6;
followPath = noone; //list that will contain the nodes to the shortest route

globalvar enemyIsMoving;
enemyIsMoving = false;

rest = 0;

InvinciFrame = 40;

str = 8
spd = 6;
def = 3
mgc = 1
lck = 1

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>currentNode = getNodeAt(x, y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move
///AI
if(sprite_index != Ben_Attack &amp;&amp; rest == 0)
{

if(enemyIsMoving == true)
{
if(InvinciFrame == 40)
sprite_index = Ben_Walk;

else if(InvinciFrame &lt; 40)
sprite_index = BenWalkDmg
    var newDestination;
    newDestination = getNodeAt(CharFight_obj.x, CharFight_obj.y);

    if (newDestination != noone &amp;&amp; newDestination != currentNode) {
    gotoNode = newDestination;
        with (objMap) {
            var newPath;
            newPath = getShortestPath(getNodeAt(other.x, other.y), other.gotoNode);
            if (newPath != noone) {
                //Path found, update followPath
                other.followPath = newPath;
            }
        }
    }
    enemyIsMoving = false;
}

}

if (followPath != noone &amp;&amp; currentNode != gotoNode) {
    var nextNode, lastNode;
    nextNode = ds_list_find_value(followPath, 0);

    var xx, yy;
    xx = getNodeX(nextNode) + global.NodeSize/2;
    yy = getNodeY(nextNode) + global.NodeSize/2;
    
    direction = point_direction(x, y, xx, yy);
    speed = moveSpeed;
    
    
    if (ds_list_size(followPath) == 1) {
    //This is last node
        if (round(x) = xx &amp;&amp; round(y) == yy) {
            x = xx;
            y = yy;
            speed = 0;
            gotoNode = noone;
            ds_list_destroy(followPath);
            followPath = noone;
            currentNode = getNodeAt(x, y);
            
            if(instance_exists(DpadFight_down) || instance_exists(DpadFight_up) || instance_exists(DpadFight_left) || instance_exists(DpadFight_right))
            enemyIsMoving = true;
            
            else
            enemyIsMoving = false;
        } else {
            //Smooth stopping
            speed = min(moveSpeed, abs(point_distance(x, y, xx, yy)/7));
        }
    } else {
        //Remove this node from path
        if (distance_to_point(xx, yy) &lt; moveSpeed) {
            ds_list_delete(followPath, 0);
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(instance_exists(timer_obj))
{

if(sprite_index != Ben_Attack &amp;&amp; rest == 0)
{
if(place_meeting(x,y-20,CharFight_obj))
sprite_index = Ben_Attack;

else if(place_meeting(x-20,y,CharFight_obj))
sprite_index = Ben_Attack;

else if(place_meeting(x+20,y,CharFight_obj))
sprite_index = Ben_Attack;

else if(place_meeting(x,y+20,CharFight_obj))
sprite_index = Ben_Attack;

rest+=1;
}

else if(rest&lt;40 &amp;&amp; rest &gt;= 1)
rest+=1;

else
rest=0;

}

if(sprite_index == Ben_Attack &amp;&amp; image_index == 2)
{
sprite_index = Ben_Idle;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///if timer stopped
if(!instance_exists(timer_obj))
{
if(place_meeting(x,y,CharFight_obj))
{
x +=5;
}
sprite_index = Ben_Idle
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///killed
if(hp&lt;=0)
{
global.gain=100;
Status.BenAlive = false;
script_execute(BattleEnd);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///hit
if(InvinciFrame &lt; 40 &amp;&amp; InvinciFrame &gt; 0)
{
InvinciFrame -=1;
}

else if(InvinciFrame == 0)
{
InvinciFrame = 40;
sprite_index = Ben_Idle;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="ArrowProjectile_obj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hp=hp-(global.total_str - def);
sprite_index = BenIdleDmg


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="CharFight_obj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///hit
with(CharFight_obj)
{
if(sprite_index == WarAttack_Right || sprite_index == WizAttack_Right || sprite_index == AlchAttack_Right)
{
BenFight_obj.hp = BenFight_obj.hp - (global.total_str - BenFight_obj.def);
BenFight_obj.sprite_index = BenIdleDmg
}

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprite = object_get_sprite(BenFight_obj);

draw_self();
draw_healthbar(x-50,y-sprite_get_yoffset(sprite)-10,x+45,y-sprite_get_yoffset(sprite)-5,hp,c_black,c_red,c_green,0,true,true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>48,64</point>
    <point>64,64</point>
  </PhysicsShapePoints>
</object>
