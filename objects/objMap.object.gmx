<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.NodeSize = 32;
initializeGraph();

//Going through every 32 pixels of the room and adding a node if there's no block at that position
var xx, yy;
for(yy = 0; yy &lt; room_height div global.NodeSize; yy+=1) {
    for(xx = 0; xx &lt; room_width div global.NodeSize; xx+=1) {
        if (position_meeting(xx * global.NodeSize, yy * global.NodeSize, wall_obj)) {
            //Don't add nodes where there is a block, skip
            nodes[xx, yy] = noone;
            continue;
        }
        
        //Providing custom ID to node to keep up with the skipped nodes
        nodes[xx, yy] = newNode(yy * (room_width div global.NodeSize) + xx);
        
        //Connect each node with the one to the left and the one above
        //(This way all nodes will be connected with nearby ones; this doesn't connect them diagonally)
        if (xx != 0) {
            if (nodes[xx - 1, yy] != noone) {
                connectNodes(nodes[xx, yy], nodes[xx - 1, yy], global.NodeSize);
            }
        }
        
        if (yy != 0) {
            if (nodes[xx, yy - 1] != noone) {
                connectNodes(nodes[xx, yy], nodes[xx, yy - 1], global.NodeSize);
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
